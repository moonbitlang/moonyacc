///|
pub(all) typealias Position = Int

///|
pub(all) enum Token {
  EOF
  IDENT(String)
  STRING(String)
  LANGLE_CODE_RANGLE(String)
  LBRACE_CODE_RBRACE((String, Int, Array[SubstItem]))
  PERCENT_LBRACE_CODE_PERCENT_RBRACE(String)
  ARROW_CODE(String)
  PERCENT_PERCENT_CODE_EOF(String)
  PERCENT_PERCENT
  PERCENT_START
  PERCENT_TOKEN
  PERCENT_TYPE
  PERCENT_POSITION
  PERCENT_LEFT
  PERCENT_RIGHT
  PERCENT_NONASSOC
  PERCENT_PREC
  PERCENT_DERIVE
  COLON
  BAR
  EQ
  SEMI
} derive(Show)

///|
pub fn Token::kind(self : Token) -> TokenKind {
  match self {
    EOF => TK_EOF
    IDENT(_) => TK_IDENT
    STRING(_) => TK_STRING
    LANGLE_CODE_RANGLE(_) => TK_LANGLE_CODE_RANGLE
    LBRACE_CODE_RBRACE(_) => TK_LBRACE_CODE_RBRACE
    PERCENT_LBRACE_CODE_PERCENT_RBRACE(_) =>
      TK_PERCENT_LBRACE_CODE_PERCENT_RBRACE
    ARROW_CODE(_) => TK_ARROW_CODE
    PERCENT_PERCENT_CODE_EOF(_) => TK_PERCENT_PERCENT_CODE_EOF
    PERCENT_PERCENT => TK_PERCENT_PERCENT
    PERCENT_START => TK_PERCENT_START
    PERCENT_TOKEN => TK_PERCENT_TOKEN
    PERCENT_TYPE => TK_PERCENT_TYPE
    PERCENT_POSITION => TK_PERCENT_POSITION
    PERCENT_LEFT => TK_PERCENT_LEFT
    PERCENT_RIGHT => TK_PERCENT_RIGHT
    PERCENT_NONASSOC => TK_PERCENT_NONASSOC
    PERCENT_PREC => TK_PERCENT_PREC
    PERCENT_DERIVE => TK_PERCENT_DERIVE
    COLON => TK_COLON
    BAR => TK_BAR
    EQ => TK_EQ
    SEMI => TK_SEMI
  }
}

///|
pub(all) enum TokenKind {
  TK_EOF
  TK_IDENT
  TK_STRING
  TK_LANGLE_CODE_RANGLE
  TK_LBRACE_CODE_RBRACE
  TK_PERCENT_LBRACE_CODE_PERCENT_RBRACE
  TK_ARROW_CODE
  TK_PERCENT_PERCENT_CODE_EOF
  TK_PERCENT_PERCENT
  TK_PERCENT_START
  TK_PERCENT_TOKEN
  TK_PERCENT_TYPE
  TK_PERCENT_POSITION
  TK_PERCENT_LEFT
  TK_PERCENT_RIGHT
  TK_PERCENT_NONASSOC
  TK_PERCENT_PREC
  TK_PERCENT_DERIVE
  TK_COLON
  TK_BAR
  TK_EQ
  TK_SEMI
}

///|
pub impl Show for TokenKind with output(self, logger) {
  logger.write_string(
    match self {
      TK_EOF => "EOF"
      TK_IDENT => "IDENT"
      TK_STRING => "STRING"
      TK_LANGLE_CODE_RANGLE => "LANGLE_CODE_RANGLE"
      TK_LBRACE_CODE_RBRACE => "LBRACE_CODE_RBRACE"
      TK_PERCENT_LBRACE_CODE_PERCENT_RBRACE =>
        "PERCENT_LBRACE_CODE_PERCENT_RBRACE"
      TK_ARROW_CODE => "ARROW_CODE"
      TK_PERCENT_PERCENT_CODE_EOF => "PERCENT_PERCENT_CODE_EOF"
      TK_PERCENT_PERCENT => "\"%%\""
      TK_PERCENT_START => "\"%start\""
      TK_PERCENT_TOKEN => "\"%token\""
      TK_PERCENT_TYPE => "\"%type\""
      TK_PERCENT_POSITION => "\"%position\""
      TK_PERCENT_LEFT => "\"%left\""
      TK_PERCENT_RIGHT => "\"%right\""
      TK_PERCENT_NONASSOC => "\"%nonassoc\""
      TK_PERCENT_PREC => "\"%prec\""
      TK_PERCENT_DERIVE => "\"%derive\""
      TK_COLON => "\":\""
      TK_BAR => "\"|\""
      TK_EQ => "\"=\""
      TK_SEMI => "\";\""
    },
  )
}

///|
pub type! ParseError {
  UnexpectedToken(Token, (Position, Position), Array[TokenKind])
}

///|
typealias YYObj = Error

///|
priv type! YYObj_Void

///|
priv type! YYObj_Rule Rule

///|
priv type! YYObj_Code_ Code?

///|
priv type! YYObj_Clause Clause

///|
priv type! YYObj_String String

///|
priv type! YYObj_Symbol Symbol

///|
priv type! YYObj_Symbol_ Symbol?

///|
priv type! YYObj_ClauseItem ClauseItem

///|
priv type! YYObj_ParserSpec ParserSpec

///|
priv type! YYObj_Declaration Declaration

///|
priv type! YYObj_ClauseAction ClauseAction

///|
priv type! YYObj_ClauseItemSymbol ClauseItemSymbol

///|
priv type! YYObj__immut_list_T_Rule_ @immut/list.T[Rule]

///|
priv type! YYObj__immut_list_T_Clause_ @immut/list.T[Clause]

///|
priv type! YYObj__immut_list_T_Symbol_ @immut/list.T[Symbol]

///|
priv type! YYObj__immut_list_T_ClauseItem_ @immut/list.T[ClauseItem]

///|
priv type! YYObj__immut_list_T_Declaration_ @immut/list.T[Declaration]

///|
priv type! YYObj__String__Int__Array_SubstItem__ (String, Int, Array[SubstItem])

///|
typealias YYState = (YYSymbol) -> YYDecision

///|
typealias YYAction = (Position, ArrayView[(YYObj, Position, Position)]) -> YYObj

///|
priv enum YYDecision {
  Accept
  Shift(YYState)
  Reduce(Int, YYSymbol, YYAction)
  ReduceNoLookahead(Int, YYSymbol, YYAction)
  Error
}

///|
priv enum YYSymbol {
  T_EOF
  T_IDENT
  T_STRING
  T_LANGLE_CODE_RANGLE
  T_LBRACE_CODE_RBRACE
  T_PERCENT_LBRACE_CODE_PERCENT_RBRACE
  T_ARROW_CODE
  T_PERCENT_PERCENT_CODE_EOF
  T_PERCENT_PERCENT
  T_PERCENT_START
  T_PERCENT_TOKEN
  T_PERCENT_TYPE
  T_PERCENT_POSITION
  T_PERCENT_LEFT
  T_PERCENT_RIGHT
  T_PERCENT_NONASSOC
  T_PERCENT_PREC
  T_PERCENT_DERIVE
  T_COLON
  T_BAR
  T_EQ
  T_SEMI
  NT_spec
  NT_header
  NT_trailer
  NT_decl_list
  NT_decl
  NT_opt_type
  NT_rule_list
  NT_rule
  NT_rule_type
  NT_clause_list
  NT_clause
  NT_clause_action
  NT_rule_prec
  NT_item_list
  NT_item
  NT_item_symbol
  NT_nonempty_symbol_list
  NT_symbol
  EOI
}

// Workaround for EOI unused warning
///|
fn init {
  match EOI {
    EOI => ()
    _ => ()
  }
}

///|
fn yy_action_0(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_Code_(header) = _args[0].0
  guard let YYObj__immut_list_T_Declaration_(decl_list) = _args[1].0
  guard let YYObj__immut_list_T_Rule_(rule_list) = _args[3].0
  guard let YYObj_Code_(trailer) = _args[4].0
  YYObj_ParserSpec(
    {
      ()
      {
        header,
        decls: decl_list.to_array(),
        rules: rule_list.to_array(),
        trailer,
      }
    },
  )
}

///|
fn yy_action_1(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_String(code) = _args[0].0
  YYObj_Code_(
    {
      ()
      Some(code)
    },
  )
}

///|
fn yy_action_2(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  YYObj_Code_(
    {
      ()
      None
    },
  )
}

///|
fn yy_action_3(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_String(code) = _args[0].0
  YYObj_Code_(
    {
      ()
      Some(code)
    },
  )
}

///|
fn yy_action_4(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_String(code) = _args[0].0
  YYObj_Code_(
    {
      ()
      Some(code)
    },
  )
}

///|
fn yy_action_5(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  YYObj_Code_(
    {
      ()
      None
    },
  )
}

///|
fn yy_action_6(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_Declaration(decl) = _args[0].0
  guard let YYObj__immut_list_T_Declaration_(decl_list) = _args[1].0
  YYObj__immut_list_T_Declaration_(
    {
      ()
      Cons(decl, decl_list)
    },
  )
}

///|
fn yy_action_7(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  YYObj__immut_list_T_Declaration_(
    {
      ()
      Nil
    },
  )
}

///|
fn yy_action_8(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj__immut_list_T_Symbol_(symbol_list) = _args[1].0
  YYObj_Declaration(
    {
      ()
      Start(symbol_list.to_array())
    },
  )
}

///|
fn yy_action_9(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_Code_(type_) = _args[1].0
  guard let YYObj__immut_list_T_Symbol_(symbol_list) = _args[2].0
  YYObj_Declaration(
    {
      ()
      Token(symbol_list.to_array(), type_~)
    },
  )
}

///|
fn yy_action_10(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_Code_(type_) = _args[1].0
  guard let YYObj_Symbol(symbol) = _args[2].0
  guard let YYObj_String(image) = _args[3].0
  YYObj_Declaration(
    {
      ()
      Token1(symbol, type_~, image~)
    },
  )
}

///|
fn yy_action_11(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_String(type_) = _args[1].0
  guard let YYObj__immut_list_T_Symbol_(symbol_list) = _args[2].0
  YYObj_Declaration(
    {
      ()
      Type(symbol_list.to_array(), type_~)
    },
  )
}

///|
fn yy_action_12(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_String(type_) = _args[1].0
  YYObj_Declaration(
    {
      ()
      Position(type_~)
    },
  )
}

///|
fn yy_action_13(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj__immut_list_T_Symbol_(symbol_list) = _args[1].0
  YYObj_Declaration(
    {
      ()
      Left(symbol_list.to_array())
    },
  )
}

///|
fn yy_action_14(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj__immut_list_T_Symbol_(symbol_list) = _args[1].0
  YYObj_Declaration(
    {
      ()
      Right(symbol_list.to_array())
    },
  )
}

///|
fn yy_action_15(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj__immut_list_T_Symbol_(symbol_list) = _args[1].0
  YYObj_Declaration(
    {
      ()
      Nonassoc(symbol_list.to_array())
    },
  )
}

///|
fn yy_action_16(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_String(traits) = _args[1].0
  guard let YYObj_String(type_) = _args[2].0
  YYObj_Declaration(
    {
      ()
      Derive(traits~, type_~)
    },
  )
}

///|
fn yy_action_17(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_String(type_) = _args[0].0
  YYObj_Code_(
    {
      ()
      Some(type_)
    },
  )
}

///|
fn yy_action_18(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  YYObj_Code_(
    {
      ()
      None
    },
  )
}

///|
fn yy_action_19(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_Rule(rule) = _args[0].0
  YYObj__immut_list_T_Rule_(
    {
      ()
      Cons(rule, Nil)
    },
  )
}

///|
fn yy_action_20(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_Rule(rule) = _args[0].0
  guard let YYObj__immut_list_T_Rule_(rule_list) = _args[1].0
  YYObj__immut_list_T_Rule_(
    {
      ()
      Cons(rule, rule_list)
    },
  )
}

///|
fn yy_action_21(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_Symbol(nonterminal) = _args[0].0
  guard let YYObj_Code_(type_) = _args[1].0
  guard let YYObj__immut_list_T_Clause_(clause_list) = _args[3].0
  YYObj_Rule(
    {
      ()
      { nonterminal, type_, clauses: clause_list.to_array() }
    },
  )
}

///|
fn yy_action_22(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_String(type_) = _args[0].0
  YYObj_Code_(
    {
      ()
      Some(type_)
    },
  )
}

///|
fn yy_action_23(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  YYObj_Code_(
    {
      ()
      None
    },
  )
}

///|
fn yy_action_24(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_Clause(clause) = _args[0].0
  YYObj__immut_list_T_Clause_(
    {
      ()
      Cons(clause, Nil)
    },
  )
}

///|
fn yy_action_25(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_Clause(clause) = _args[0].0
  guard let YYObj__immut_list_T_Clause_(clause_list) = _args[2].0
  YYObj__immut_list_T_Clause_(
    {
      ()
      Cons(clause, clause_list)
    },
  )
}

///|
fn yy_action_26(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj__immut_list_T_ClauseItem_(item_list) = _args[0].0
  guard let YYObj_Symbol_(prec) = _args[1].0
  guard let YYObj_ClauseAction(action) = _args[2].0
  YYObj_Clause(
    {
      ()
      { items: item_list.to_array(), prec, action }
    },
  )
}

///|
fn yy_action_27(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  let _start_pos = _args[0].1
  let _end_pos = _args[0].2
  guard let YYObj__String__Int__Array_SubstItem__(code) = _args[0].0
  YYObj_ClauseAction(
    {
      ()
      let (code, utf8_pos, subst) = code
      {
        code: Some({ code, utf8_pos, subst }),
        start: _start_pos,
        end: _end_pos,
      }
    },
  )
}

///|
fn yy_action_28(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  let _start_pos = _last_pos
  let _end_pos = _last_pos
  YYObj_ClauseAction(
    {
      ()
      { code: None, start: _start_pos, end: _end_pos }
    },
  )
}

///|
fn yy_action_29(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_Symbol(symbol) = _args[1].0
  YYObj_Symbol_(
    {
      ()
      Some(symbol)
    },
  )
}

///|
fn yy_action_30(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  YYObj_Symbol_(
    {
      ()
      None
    },
  )
}

///|
fn yy_action_31(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_ClauseItem(item) = _args[0].0
  guard let YYObj__immut_list_T_ClauseItem_(item_list) = _args[1].0
  YYObj__immut_list_T_ClauseItem_(
    {
      ()
      Cons(item, item_list)
    },
  )
}

///|
fn yy_action_32(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  YYObj__immut_list_T_ClauseItem_(
    {
      ()
      Nil
    },
  )
}

///|
fn yy_action_33(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_ClauseItemSymbol(symbol) = _args[0].0
  YYObj_ClauseItem(
    {
      ()
      { binder: None, symbol }
    },
  )
}

///|
fn yy_action_34(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_String(binder) = _args[0].0
  guard let YYObj_ClauseItemSymbol(symbol) = _args[2].0
  YYObj_ClauseItem(
    {
      ()
      { binder: Some(binder), symbol }
    },
  )
}

///|
fn yy_action_35(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_Symbol(symbol) = _args[0].0
  YYObj_ClauseItemSymbol(
    {
      ()
      Symbol(symbol)
    },
  )
}

///|
fn yy_action_36(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_String(image) = _args[0].0
  YYObj_ClauseItemSymbol(
    {
      ()
      Image(image)
    },
  )
}

///|
fn yy_action_37(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_Symbol(symbol) = _args[0].0
  YYObj__immut_list_T_Symbol_(
    {
      ()
      Cons(symbol, Nil)
    },
  )
}

///|
fn yy_action_38(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_Symbol(symbol) = _args[0].0
  guard let YYObj__immut_list_T_Symbol_(symbol_list) = _args[1].0
  YYObj__immut_list_T_Symbol_(
    {
      ()
      Cons(symbol, symbol_list)
    },
  )
}

///|
fn yy_action_39(
  _last_pos : Position,
  _args : ArrayView[(YYObj, Position, Position)]
) -> YYObj {
  guard let YYObj_String(ident) = _args[0].0
  YYObj_Symbol(
    {
      ()
      ident
    },
  )
}

///|
fn yy_input(
  token : Token,
  _start_pos : Position,
  _end_pos : Position
) -> (YYSymbol, YYObj) {
  match token {
    EOF => (T_EOF, YYObj_Void)
    IDENT(data) => (T_IDENT, YYObj_String(data))
    STRING(data) => (T_STRING, YYObj_String(data))
    LANGLE_CODE_RANGLE(data) => (T_LANGLE_CODE_RANGLE, YYObj_String(data))
    LBRACE_CODE_RBRACE(data) =>
      (T_LBRACE_CODE_RBRACE, YYObj__String__Int__Array_SubstItem__(data))
    PERCENT_LBRACE_CODE_PERCENT_RBRACE(data) =>
      (T_PERCENT_LBRACE_CODE_PERCENT_RBRACE, YYObj_String(data))
    ARROW_CODE(data) => (T_ARROW_CODE, YYObj_String(data))
    PERCENT_PERCENT_CODE_EOF(data) =>
      (T_PERCENT_PERCENT_CODE_EOF, YYObj_String(data))
    PERCENT_PERCENT => (T_PERCENT_PERCENT, YYObj_Void)
    PERCENT_START => (T_PERCENT_START, YYObj_Void)
    PERCENT_TOKEN => (T_PERCENT_TOKEN, YYObj_Void)
    PERCENT_TYPE => (T_PERCENT_TYPE, YYObj_Void)
    PERCENT_POSITION => (T_PERCENT_POSITION, YYObj_Void)
    PERCENT_LEFT => (T_PERCENT_LEFT, YYObj_Void)
    PERCENT_RIGHT => (T_PERCENT_RIGHT, YYObj_Void)
    PERCENT_NONASSOC => (T_PERCENT_NONASSOC, YYObj_Void)
    PERCENT_PREC => (T_PERCENT_PREC, YYObj_Void)
    PERCENT_DERIVE => (T_PERCENT_DERIVE, YYObj_Void)
    COLON => (T_COLON, YYObj_Void)
    BAR => (T_BAR, YYObj_Void)
    EQ => (T_EQ, YYObj_Void)
    SEMI => (T_SEMI, YYObj_Void)
  }
}

// [0, spec → • header decl_list PERCENT_PERCENT rule_list trailer EOF, $]
// [1, header → • PERCENT_LBRACE_CODE_PERCENT_RBRACE, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [2, header → •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [40, spec_prime → • spec, $]
///|
fn yy_state_0(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    NT_spec => Shift(yy_state_1)
    T_PERCENT_LBRACE_CODE_PERCENT_RBRACE => Shift(yy_state_2)
    NT_header => Shift(yy_state_3)
    T_PERCENT_PERCENT
    | T_PERCENT_START
    | T_PERCENT_TOKEN
    | T_PERCENT_TYPE
    | T_PERCENT_POSITION
    | T_PERCENT_LEFT
    | T_PERCENT_RIGHT
    | T_PERCENT_NONASSOC
    | T_PERCENT_DERIVE => Reduce(0, NT_header, yy_action_2)
    _ => Error
  }
}

// [40, spec_prime → spec •, $]
///|
fn yy_state_1(_lookahead : YYSymbol) -> YYDecision {
  Accept
}

// [1, header → PERCENT_LBRACE_CODE_PERCENT_RBRACE •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_2(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(1, NT_header, yy_action_1)
}

// [0, spec → header • decl_list PERCENT_PERCENT rule_list trailer EOF, $]
// [6, decl_list → • decl decl_list, PERCENT_PERCENT]
// [7, decl_list → •, PERCENT_PERCENT]
// [8, decl → • PERCENT_START nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [9, decl → • PERCENT_TOKEN opt_type nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [10, decl → • PERCENT_TOKEN opt_type symbol STRING, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [11, decl → • PERCENT_TYPE LANGLE_CODE_RANGLE nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [12, decl → • PERCENT_POSITION LANGLE_CODE_RANGLE, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [13, decl → • PERCENT_LEFT nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [14, decl → • PERCENT_RIGHT nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [15, decl → • PERCENT_NONASSOC nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [16, decl → • PERCENT_DERIVE LANGLE_CODE_RANGLE IDENT, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_3(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_PERCENT_DERIVE => Shift(yy_state_4)
    T_PERCENT_NONASSOC => Shift(yy_state_7)
    T_PERCENT_RIGHT => Shift(yy_state_12)
    T_PERCENT_LEFT => Shift(yy_state_14)
    T_PERCENT_POSITION => Shift(yy_state_16)
    T_PERCENT_TYPE => Shift(yy_state_18)
    T_PERCENT_TOKEN => Shift(yy_state_21)
    T_PERCENT_START => Shift(yy_state_27)
    NT_decl => Shift(yy_state_29)
    NT_decl_list => Shift(yy_state_31)
    T_PERCENT_PERCENT => Reduce(0, NT_decl_list, yy_action_7)
    _ => Error
  }
}

// [16, decl → PERCENT_DERIVE • LANGLE_CODE_RANGLE IDENT, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_4(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_LANGLE_CODE_RANGLE => Shift(yy_state_5)
    _ => Error
  }
}

// [16, decl → PERCENT_DERIVE LANGLE_CODE_RANGLE • IDENT, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_5(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_IDENT => Shift(yy_state_6)
    _ => Error
  }
}

// [16, decl → PERCENT_DERIVE LANGLE_CODE_RANGLE IDENT •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_6(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(3, NT_decl, yy_action_16)
}

// [15, decl → PERCENT_NONASSOC • nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [37, nonempty_symbol_list → • symbol, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [38, nonempty_symbol_list → • symbol nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [39, symbol → • IDENT, IDENT / PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_7(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_IDENT => Shift(yy_state_8)
    NT_symbol => Shift(yy_state_9)
    NT_nonempty_symbol_list => Shift(yy_state_11)
    _ => Error
  }
}

// [39, symbol → IDENT •, IDENT / STRING / LBRACE_CODE_RBRACE / ARROW_CODE / PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_PREC / PERCENT_DERIVE / COLON / BAR / SEMI]
///|
fn yy_state_8(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(1, NT_symbol, yy_action_39)
}

// [37, nonempty_symbol_list → • symbol, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [37, nonempty_symbol_list → symbol •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [38, nonempty_symbol_list → • symbol nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [38, nonempty_symbol_list → symbol • nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [39, symbol → • IDENT, IDENT / PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_9(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_IDENT => Shift(yy_state_8)
    NT_symbol => Shift(yy_state_9)
    NT_nonempty_symbol_list => Shift(yy_state_10)
    T_PERCENT_PERCENT
    | T_PERCENT_START
    | T_PERCENT_TOKEN
    | T_PERCENT_TYPE
    | T_PERCENT_POSITION
    | T_PERCENT_LEFT
    | T_PERCENT_RIGHT
    | T_PERCENT_NONASSOC
    | T_PERCENT_DERIVE => Reduce(1, NT_nonempty_symbol_list, yy_action_37)
    _ => Error
  }
}

// [38, nonempty_symbol_list → symbol nonempty_symbol_list •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_10(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(2, NT_nonempty_symbol_list, yy_action_38)
}

// [15, decl → PERCENT_NONASSOC nonempty_symbol_list •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_11(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(2, NT_decl, yy_action_15)
}

// [14, decl → PERCENT_RIGHT • nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [37, nonempty_symbol_list → • symbol, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [38, nonempty_symbol_list → • symbol nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [39, symbol → • IDENT, IDENT / PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_12(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_IDENT => Shift(yy_state_8)
    NT_symbol => Shift(yy_state_9)
    NT_nonempty_symbol_list => Shift(yy_state_13)
    _ => Error
  }
}

// [14, decl → PERCENT_RIGHT nonempty_symbol_list •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_13(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(2, NT_decl, yy_action_14)
}

// [13, decl → PERCENT_LEFT • nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [37, nonempty_symbol_list → • symbol, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [38, nonempty_symbol_list → • symbol nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [39, symbol → • IDENT, IDENT / PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_14(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_IDENT => Shift(yy_state_8)
    NT_symbol => Shift(yy_state_9)
    NT_nonempty_symbol_list => Shift(yy_state_15)
    _ => Error
  }
}

// [13, decl → PERCENT_LEFT nonempty_symbol_list •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_15(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(2, NT_decl, yy_action_13)
}

// [12, decl → PERCENT_POSITION • LANGLE_CODE_RANGLE, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_16(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_LANGLE_CODE_RANGLE => Shift(yy_state_17)
    _ => Error
  }
}

// [12, decl → PERCENT_POSITION LANGLE_CODE_RANGLE •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_17(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(2, NT_decl, yy_action_12)
}

// [11, decl → PERCENT_TYPE • LANGLE_CODE_RANGLE nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_18(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_LANGLE_CODE_RANGLE => Shift(yy_state_19)
    _ => Error
  }
}

// [11, decl → PERCENT_TYPE LANGLE_CODE_RANGLE • nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [37, nonempty_symbol_list → • symbol, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [38, nonempty_symbol_list → • symbol nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [39, symbol → • IDENT, IDENT / PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_19(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_IDENT => Shift(yy_state_8)
    NT_symbol => Shift(yy_state_9)
    NT_nonempty_symbol_list => Shift(yy_state_20)
    _ => Error
  }
}

// [11, decl → PERCENT_TYPE LANGLE_CODE_RANGLE nonempty_symbol_list •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_20(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(3, NT_decl, yy_action_11)
}

// [9, decl → PERCENT_TOKEN • opt_type nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [10, decl → PERCENT_TOKEN • opt_type symbol STRING, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [17, opt_type → • LANGLE_CODE_RANGLE, IDENT]
// [18, opt_type → •, IDENT]
///|
fn yy_state_21(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_LANGLE_CODE_RANGLE => Shift(yy_state_22)
    NT_opt_type => Shift(yy_state_23)
    T_IDENT => Reduce(0, NT_opt_type, yy_action_18)
    _ => Error
  }
}

// [17, opt_type → LANGLE_CODE_RANGLE •, IDENT]
///|
fn yy_state_22(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(1, NT_opt_type, yy_action_17)
}

// [9, decl → PERCENT_TOKEN opt_type • nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [10, decl → PERCENT_TOKEN opt_type • symbol STRING, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [37, nonempty_symbol_list → • symbol, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [38, nonempty_symbol_list → • symbol nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [39, symbol → • IDENT, IDENT / STRING / PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_23(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_IDENT => Shift(yy_state_8)
    NT_symbol => Shift(yy_state_24)
    NT_nonempty_symbol_list => Shift(yy_state_26)
    _ => Error
  }
}

// [10, decl → PERCENT_TOKEN opt_type symbol • STRING, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [37, nonempty_symbol_list → • symbol, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [37, nonempty_symbol_list → symbol •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [38, nonempty_symbol_list → • symbol nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [38, nonempty_symbol_list → symbol • nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [39, symbol → • IDENT, IDENT / PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_24(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_IDENT => Shift(yy_state_8)
    NT_symbol => Shift(yy_state_9)
    NT_nonempty_symbol_list => Shift(yy_state_10)
    T_STRING => Shift(yy_state_25)
    T_PERCENT_PERCENT
    | T_PERCENT_START
    | T_PERCENT_TOKEN
    | T_PERCENT_TYPE
    | T_PERCENT_POSITION
    | T_PERCENT_LEFT
    | T_PERCENT_RIGHT
    | T_PERCENT_NONASSOC
    | T_PERCENT_DERIVE => Reduce(1, NT_nonempty_symbol_list, yy_action_37)
    _ => Error
  }
}

// [10, decl → PERCENT_TOKEN opt_type symbol STRING •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_25(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(4, NT_decl, yy_action_10)
}

// [9, decl → PERCENT_TOKEN opt_type nonempty_symbol_list •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_26(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(3, NT_decl, yy_action_9)
}

// [8, decl → PERCENT_START • nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [37, nonempty_symbol_list → • symbol, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [38, nonempty_symbol_list → • symbol nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [39, symbol → • IDENT, IDENT / PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_27(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_IDENT => Shift(yy_state_8)
    NT_symbol => Shift(yy_state_9)
    NT_nonempty_symbol_list => Shift(yy_state_28)
    _ => Error
  }
}

// [8, decl → PERCENT_START nonempty_symbol_list •, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_28(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(2, NT_decl, yy_action_8)
}

// [6, decl_list → • decl decl_list, PERCENT_PERCENT]
// [6, decl_list → decl • decl_list, PERCENT_PERCENT]
// [7, decl_list → •, PERCENT_PERCENT]
// [8, decl → • PERCENT_START nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [9, decl → • PERCENT_TOKEN opt_type nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [10, decl → • PERCENT_TOKEN opt_type symbol STRING, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [11, decl → • PERCENT_TYPE LANGLE_CODE_RANGLE nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [12, decl → • PERCENT_POSITION LANGLE_CODE_RANGLE, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [13, decl → • PERCENT_LEFT nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [14, decl → • PERCENT_RIGHT nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [15, decl → • PERCENT_NONASSOC nonempty_symbol_list, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
// [16, decl → • PERCENT_DERIVE LANGLE_CODE_RANGLE IDENT, PERCENT_PERCENT / PERCENT_START / PERCENT_TOKEN / PERCENT_TYPE / PERCENT_POSITION / PERCENT_LEFT / PERCENT_RIGHT / PERCENT_NONASSOC / PERCENT_DERIVE]
///|
fn yy_state_29(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_PERCENT_DERIVE => Shift(yy_state_4)
    T_PERCENT_NONASSOC => Shift(yy_state_7)
    T_PERCENT_RIGHT => Shift(yy_state_12)
    T_PERCENT_LEFT => Shift(yy_state_14)
    T_PERCENT_POSITION => Shift(yy_state_16)
    T_PERCENT_TYPE => Shift(yy_state_18)
    T_PERCENT_TOKEN => Shift(yy_state_21)
    T_PERCENT_START => Shift(yy_state_27)
    NT_decl => Shift(yy_state_29)
    NT_decl_list => Shift(yy_state_30)
    T_PERCENT_PERCENT => Reduce(0, NT_decl_list, yy_action_7)
    _ => Error
  }
}

// [6, decl_list → decl decl_list •, PERCENT_PERCENT]
///|
fn yy_state_30(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(2, NT_decl_list, yy_action_6)
}

// [0, spec → header decl_list • PERCENT_PERCENT rule_list trailer EOF, $]
///|
fn yy_state_31(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_PERCENT_PERCENT => Shift(yy_state_32)
    _ => Error
  }
}

// [0, spec → header decl_list PERCENT_PERCENT • rule_list trailer EOF, $]
// [19, rule_list → • rule, EOF / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
// [20, rule_list → • rule rule_list, EOF / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
// [21, rule → • symbol rule_type COLON clause_list SEMI, EOF / IDENT / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
// [39, symbol → • IDENT, ARROW_CODE / COLON]
///|
fn yy_state_32(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_IDENT => Shift(yy_state_8)
    NT_symbol => Shift(yy_state_33)
    NT_rule => Shift(yy_state_56)
    NT_rule_list => Shift(yy_state_58)
    _ => Error
  }
}

// [21, rule → symbol • rule_type COLON clause_list SEMI, EOF / IDENT / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
// [22, rule_type → • ARROW_CODE, COLON]
// [23, rule_type → •, COLON]
///|
fn yy_state_33(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_ARROW_CODE => Shift(yy_state_34)
    NT_rule_type => Shift(yy_state_35)
    T_COLON => Reduce(0, NT_rule_type, yy_action_23)
    _ => Error
  }
}

// [22, rule_type → ARROW_CODE •, COLON]
///|
fn yy_state_34(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(1, NT_rule_type, yy_action_22)
}

// [21, rule → symbol rule_type • COLON clause_list SEMI, EOF / IDENT / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
///|
fn yy_state_35(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_COLON => Shift(yy_state_36)
    _ => Error
  }
}

// [21, rule → symbol rule_type COLON • clause_list SEMI, EOF / IDENT / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
// [24, clause_list → • clause, SEMI]
// [25, clause_list → • clause BAR clause_list, SEMI]
// [26, clause → • item_list rule_prec clause_action, BAR / SEMI]
// [31, item_list → • item item_list, LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [32, item_list → •, LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [33, item → • item_symbol, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [34, item → • IDENT EQ item_symbol, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [35, item_symbol → • symbol, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [36, item_symbol → • STRING, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [39, symbol → • IDENT, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
///|
fn yy_state_36(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_STRING => Shift(yy_state_37)
    NT_symbol => Shift(yy_state_38)
    T_IDENT => Shift(yy_state_39)
    NT_item_symbol => Shift(yy_state_42)
    NT_item => Shift(yy_state_43)
    NT_item_list => Shift(yy_state_45)
    NT_clause => Shift(yy_state_51)
    NT_clause_list => Shift(yy_state_54)
    T_LBRACE_CODE_RBRACE | T_PERCENT_PREC | T_BAR | T_SEMI =>
      Reduce(0, NT_item_list, yy_action_32)
    _ => Error
  }
}

// [36, item_symbol → STRING •, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
///|
fn yy_state_37(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(1, NT_item_symbol, yy_action_36)
}

// [35, item_symbol → symbol •, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
///|
fn yy_state_38(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(1, NT_item_symbol, yy_action_35)
}

// [34, item → IDENT • EQ item_symbol, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [39, symbol → IDENT •, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
///|
fn yy_state_39(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_EQ => Shift(yy_state_40)
    T_IDENT
    | T_STRING
    | T_LBRACE_CODE_RBRACE
    | T_PERCENT_PREC
    | T_BAR
    | T_SEMI => Reduce(1, NT_symbol, yy_action_39)
    _ => Error
  }
}

// [34, item → IDENT EQ • item_symbol, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [35, item_symbol → • symbol, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [36, item_symbol → • STRING, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [39, symbol → • IDENT, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
///|
fn yy_state_40(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_IDENT => Shift(yy_state_8)
    T_STRING => Shift(yy_state_37)
    NT_symbol => Shift(yy_state_38)
    NT_item_symbol => Shift(yy_state_41)
    _ => Error
  }
}

// [34, item → IDENT EQ item_symbol •, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
///|
fn yy_state_41(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(3, NT_item, yy_action_34)
}

// [33, item → item_symbol •, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
///|
fn yy_state_42(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(1, NT_item, yy_action_33)
}

// [31, item_list → • item item_list, LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [31, item_list → item • item_list, LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [32, item_list → •, LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [33, item → • item_symbol, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [34, item → • IDENT EQ item_symbol, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [35, item_symbol → • symbol, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [36, item_symbol → • STRING, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [39, symbol → • IDENT, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
///|
fn yy_state_43(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_STRING => Shift(yy_state_37)
    NT_symbol => Shift(yy_state_38)
    T_IDENT => Shift(yy_state_39)
    NT_item_symbol => Shift(yy_state_42)
    NT_item => Shift(yy_state_43)
    NT_item_list => Shift(yy_state_44)
    T_LBRACE_CODE_RBRACE | T_PERCENT_PREC | T_BAR | T_SEMI =>
      Reduce(0, NT_item_list, yy_action_32)
    _ => Error
  }
}

// [31, item_list → item item_list •, LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
///|
fn yy_state_44(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(2, NT_item_list, yy_action_31)
}

// [26, clause → item_list • rule_prec clause_action, BAR / SEMI]
// [29, rule_prec → • PERCENT_PREC symbol, LBRACE_CODE_RBRACE / BAR / SEMI]
// [30, rule_prec → •, LBRACE_CODE_RBRACE / BAR / SEMI]
///|
fn yy_state_45(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_PERCENT_PREC => Shift(yy_state_46)
    NT_rule_prec => Shift(yy_state_48)
    T_LBRACE_CODE_RBRACE | T_BAR | T_SEMI =>
      Reduce(0, NT_rule_prec, yy_action_30)
    _ => Error
  }
}

// [29, rule_prec → PERCENT_PREC • symbol, LBRACE_CODE_RBRACE / BAR / SEMI]
// [39, symbol → • IDENT, LBRACE_CODE_RBRACE / BAR / SEMI]
///|
fn yy_state_46(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_IDENT => Shift(yy_state_8)
    NT_symbol => Shift(yy_state_47)
    _ => Error
  }
}

// [29, rule_prec → PERCENT_PREC symbol •, LBRACE_CODE_RBRACE / BAR / SEMI]
///|
fn yy_state_47(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(2, NT_rule_prec, yy_action_29)
}

// [26, clause → item_list rule_prec • clause_action, BAR / SEMI]
// [27, clause_action → • LBRACE_CODE_RBRACE, BAR / SEMI]
// [28, clause_action → •, BAR / SEMI]
///|
fn yy_state_48(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_LBRACE_CODE_RBRACE => Shift(yy_state_49)
    NT_clause_action => Shift(yy_state_50)
    T_BAR | T_SEMI => Reduce(0, NT_clause_action, yy_action_28)
    _ => Error
  }
}

// [27, clause_action → LBRACE_CODE_RBRACE •, BAR / SEMI]
///|
fn yy_state_49(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(1, NT_clause_action, yy_action_27)
}

// [26, clause → item_list rule_prec clause_action •, BAR / SEMI]
///|
fn yy_state_50(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(3, NT_clause, yy_action_26)
}

// [24, clause_list → clause •, SEMI]
// [25, clause_list → clause • BAR clause_list, SEMI]
///|
fn yy_state_51(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_BAR => Shift(yy_state_52)
    T_SEMI => Reduce(1, NT_clause_list, yy_action_24)
    _ => Error
  }
}

// [24, clause_list → • clause, SEMI]
// [25, clause_list → • clause BAR clause_list, SEMI]
// [25, clause_list → clause BAR • clause_list, SEMI]
// [26, clause → • item_list rule_prec clause_action, BAR / SEMI]
// [31, item_list → • item item_list, LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [32, item_list → •, LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [33, item → • item_symbol, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [34, item → • IDENT EQ item_symbol, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [35, item_symbol → • symbol, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [36, item_symbol → • STRING, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
// [39, symbol → • IDENT, IDENT / STRING / LBRACE_CODE_RBRACE / PERCENT_PREC / BAR / SEMI]
///|
fn yy_state_52(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_STRING => Shift(yy_state_37)
    NT_symbol => Shift(yy_state_38)
    T_IDENT => Shift(yy_state_39)
    NT_item_symbol => Shift(yy_state_42)
    NT_item => Shift(yy_state_43)
    NT_item_list => Shift(yy_state_45)
    NT_clause => Shift(yy_state_51)
    NT_clause_list => Shift(yy_state_53)
    T_LBRACE_CODE_RBRACE | T_PERCENT_PREC | T_BAR | T_SEMI =>
      Reduce(0, NT_item_list, yy_action_32)
    _ => Error
  }
}

// [25, clause_list → clause BAR clause_list •, SEMI]
///|
fn yy_state_53(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(3, NT_clause_list, yy_action_25)
}

// [21, rule → symbol rule_type COLON clause_list • SEMI, EOF / IDENT / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
///|
fn yy_state_54(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_SEMI => Shift(yy_state_55)
    _ => Error
  }
}

// [21, rule → symbol rule_type COLON clause_list SEMI •, EOF / IDENT / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
///|
fn yy_state_55(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(5, NT_rule, yy_action_21)
}

// [19, rule_list → • rule, EOF / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
// [19, rule_list → rule •, EOF / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
// [20, rule_list → • rule rule_list, EOF / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
// [20, rule_list → rule • rule_list, EOF / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
// [21, rule → • symbol rule_type COLON clause_list SEMI, EOF / IDENT / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
// [39, symbol → • IDENT, ARROW_CODE / COLON]
///|
fn yy_state_56(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_IDENT => Shift(yy_state_8)
    NT_symbol => Shift(yy_state_33)
    NT_rule => Shift(yy_state_56)
    NT_rule_list => Shift(yy_state_57)
    T_EOF | T_PERCENT_LBRACE_CODE_PERCENT_RBRACE | T_PERCENT_PERCENT_CODE_EOF =>
      Reduce(1, NT_rule_list, yy_action_19)
    _ => Error
  }
}

// [20, rule_list → rule rule_list •, EOF / PERCENT_LBRACE_CODE_PERCENT_RBRACE / PERCENT_PERCENT_CODE_EOF]
///|
fn yy_state_57(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(2, NT_rule_list, yy_action_20)
}

// [0, spec → header decl_list PERCENT_PERCENT rule_list • trailer EOF, $]
// [3, trailer → • PERCENT_LBRACE_CODE_PERCENT_RBRACE, EOF]
// [4, trailer → • PERCENT_PERCENT_CODE_EOF, EOF]
// [5, trailer → •, EOF]
///|
fn yy_state_58(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_PERCENT_PERCENT_CODE_EOF => Shift(yy_state_59)
    T_PERCENT_LBRACE_CODE_PERCENT_RBRACE => Shift(yy_state_60)
    NT_trailer => Shift(yy_state_61)
    T_EOF => Reduce(0, NT_trailer, yy_action_5)
    _ => Error
  }
}

// [4, trailer → PERCENT_PERCENT_CODE_EOF •, EOF]
///|
fn yy_state_59(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(1, NT_trailer, yy_action_4)
}

// [3, trailer → PERCENT_LBRACE_CODE_PERCENT_RBRACE •, EOF]
///|
fn yy_state_60(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(1, NT_trailer, yy_action_3)
}

// [0, spec → header decl_list PERCENT_PERCENT rule_list trailer • EOF, $]
///|
fn yy_state_61(_lookahead : YYSymbol) -> YYDecision {
  match _lookahead {
    T_EOF => Shift(yy_state_62)
    _ => Error
  }
}

// [0, spec → header decl_list PERCENT_PERCENT rule_list trailer EOF •, $]
///|
fn yy_state_62(_lookahead : YYSymbol) -> YYDecision {
  ReduceNoLookahead(6, NT_spec, yy_action_0)
}

///|
fn yy_parse[T](
  read_token : () -> (Token, Position, Position),
  start_pos : Position,
  start : YYState,
  return_ : (YYObj) -> T
) -> T!ParseError {
  let mut state_stack : @immut/list.T[YYState] = Cons(start, Nil)
  let data_stack : Array[(YYObj, Position, Position)] = []
  let mut last_pos = start_pos
  let mut state = start
  let mut lookahead : (YYSymbol, (YYObj, Position, Position), Token)? = None
  let mut last_shifted_state_stack = state_stack
  while true {
    let decision = match state(EOI) {
      ReduceNoLookahead(_) | Accept as t => t
      _ =>
        match lookahead {
          Some(la) => state(la.0)
          None => {
            let (token, start_pos, end_pos) = read_token()
            let (symbol, data) = yy_input(token, start_pos, end_pos)
            lookahead = Some((symbol, (data, start_pos, end_pos), token))
            state(symbol)
          }
        }
    }
    match decision {
      Accept => return return_(data_stack.unsafe_pop().0)
      Shift(next_state) => {
        guard let Some(la) = lookahead
        data_stack.push(la.1)
        state_stack = Cons(next_state, state_stack)
        last_shifted_state_stack = state_stack
        state = next_state
        last_pos = la.1.2
        lookahead = None
      }
      Reduce(count, symbol, action)
      | ReduceNoLookahead(count, symbol, action) =>
        loop (count, symbol, action) {
          _ => {
            let args = data_stack[data_stack.length() - count:]
            let data = action(last_pos, args)
            let (start_pos, end_pos) = if args.length() == 0 {
              (last_pos, last_pos)
            } else {
              (args[0].1, args[args.length() - 1].2)
            }
            for i in 0..<count {
              ignore(data_stack.unsafe_pop())
              state_stack = state_stack.tail()
            }
            state = state_stack.unsafe_head()
            data_stack.push((data, start_pos, end_pos))
            match state(symbol) {
              Accept => return return_(data_stack.unsafe_pop().0)
              Shift(next_state) => {
                state_stack = Cons(next_state, state_stack)
                state = next_state
              }
              Reduce(count, symbol, action)
              | ReduceNoLookahead(count, symbol, action) =>
                continue (count, symbol, action)
              _ => panic()
            }
          }
        }
      Error => {
        let (_, (_, start_pos, end_pos), token) = lookahead.unwrap()
        error!(last_shifted_state_stack, token, (start_pos, end_pos))
      }
    }
  }
  panic()
}

///|
fn error(
  stack : @immut/list.T[YYState],
  token : Token,
  loc : (Position, Position)
) -> Unit!ParseError {
  let expected = []
  fn try_add(symbol : YYSymbol, kind : TokenKind) {
    fn go(stack : @immut/list.T[YYState]) {
      match stack {
        Nil => ()
        Cons(state, _) =>
          match state(symbol) {
            Accept | Shift(_) => expected.push(kind)
            Reduce(count, symbol, _) | ReduceNoLookahead(count, symbol, _) => {
              fn inner_go(stack : @immut/list.T[YYState], count, symbol) {
                let stack = stack.drop(count)
                guard let Cons(state, _) = stack
                match state(symbol) {
                  Shift(state) => go(Cons(state, stack))
                  Reduce(count, symbol, _)
                  | ReduceNoLookahead(count, symbol, _) =>
                    inner_go(stack, count, symbol)
                  _ => panic()
                }
              }

              inner_go(stack, count, symbol)
            }
            Error => ()
          }
      }
    }

    go(stack)
  }

  for
    term in (
      [
        (T_EOF, TK_EOF),
        (T_IDENT, TK_IDENT),
        (T_STRING, TK_STRING),
        (T_LANGLE_CODE_RANGLE, TK_LANGLE_CODE_RANGLE),
        (T_LBRACE_CODE_RBRACE, TK_LBRACE_CODE_RBRACE),
        (
          T_PERCENT_LBRACE_CODE_PERCENT_RBRACE,
          TK_PERCENT_LBRACE_CODE_PERCENT_RBRACE,
        ),
        (T_ARROW_CODE, TK_ARROW_CODE),
        (T_PERCENT_PERCENT_CODE_EOF, TK_PERCENT_PERCENT_CODE_EOF),
        (T_PERCENT_PERCENT, TK_PERCENT_PERCENT),
        (T_PERCENT_START, TK_PERCENT_START),
        (T_PERCENT_TOKEN, TK_PERCENT_TOKEN),
        (T_PERCENT_TYPE, TK_PERCENT_TYPE),
        (T_PERCENT_POSITION, TK_PERCENT_POSITION),
        (T_PERCENT_LEFT, TK_PERCENT_LEFT),
        (T_PERCENT_RIGHT, TK_PERCENT_RIGHT),
        (T_PERCENT_NONASSOC, TK_PERCENT_NONASSOC),
        (T_PERCENT_PREC, TK_PERCENT_PREC),
        (T_PERCENT_DERIVE, TK_PERCENT_DERIVE),
        (T_COLON, TK_COLON),
        (T_BAR, TK_BAR),
        (T_EQ, TK_EQ),
        (T_SEMI, TK_SEMI),
      ] : Array[(YYSymbol, TokenKind)]) {
    try_add(term.0, term.1)
  }
  raise UnexpectedToken(token, loc, expected)
}

///|
pub fn spec(
  read_token : () -> (Token, Position, Position),
  start_pos : Position
) -> ParserSpec!ParseError {
  yy_parse!(read_token, start_pos, yy_state_0, fn {
    YYObj_ParserSpec(result) => result
    _ => panic()
  })
}
